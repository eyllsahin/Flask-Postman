# Production Docker Compose Configuration
# Use this file to deploy the application in production
# Make sure to set all environment variables properly

version: '3.8'

services:
  chatbot_mysql:
    image: mysql:8.0
    container_name: chatbot_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
    networks:
      - chatbot_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  chatbot_web:
    image: sept23/flask-chatbot:latest  # Using DockerHub image
    container_name: chatbot_flask_web_prod
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - DB_HOST=chatbot_mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      chatbot_mysql:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - chatbot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data_prod:

networks:
  chatbot_network:
    driver: bridge
